<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		">
	<context:component-scan base-package="com.sishuok">
	</context:component-scan>

	<aop:aspectj-autoproxy proxy-target-class="true" />
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<!-- properties config -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="order" value="1" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<list>
				<value>classpath:properties/memcached.properties</value>
			</list>
		</property>
	</bean>

	<!--memcached 客户端 SocketPool -->
	<bean id="memcachedPool" class="com.whalin.MemCached.SockIOPool"
		factory-method="getInstance" init-method="initialize"
		destroy-method="shutDown">
		<constructor-arg>
			<value>neeaMemcachedPool</value>
		</constructor-arg>
		<property name="servers">
			<list>
				<value>${memcached.server1}</value>
				<value>${memcached.server2}</value>
			</list>
		</property>
		<!--  -->
		<property name="weights">
			<list>
				<value>${memcached.weight1}</value>
				<value>${memcached.weight2}</value>
			</list>
		</property>
		<property name="initConn">
			<value>${memcached.initConn}</value>
		</property>
		<property name="minConn">
			<value>${memcached.minConn}</value>
		</property>
		<property name="maxConn">
			<value>${memcached.maxConn}</value>
		</property>
		<property name="maintSleep">
			<value>${memcached.maintSleep}</value>
		</property>
		<property name="nagle">
			<value>${memcached.nagle}</value>
		</property>
		<property name="maxIdle">
			<value>${memcached.maxIdle}</value>
		</property>
		<property name="socketTO">
			<value>${memcached.socketTO}</value>
		</property>
	</bean>
	<!--memcached client -->
	<bean id="memCachedClient" class="com.whalin.MemCached.MemCachedClient">
		<constructor-arg>
			<value>neeaMemcachedPool</value>
		</constructor-arg>
	</bean>
	
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName">
			<value>com.mysql.cj.jdbc.Driver</value>
		</property>
		<property name="url">
			<value>jdbc:mysql://localhost:3306/arch1?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=UTC
			</value>
		</property>
		<property name="username">
			<value>root</value>
		</property>
		<property name="password" value="754631" />
	</bean>
	
	<!-- 加载数据源和MybatisConf.xml以及扫描*Mapper.xml文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:GoodsmgrMybatisConf.xml"/>
		<property name="mapperLocations" value="classpath:mapper/**/*Mapper.xml" />
	</bean>
	
	<!-- 上面扫到了的用以下配置生成实现，同时指定之后加了Repository注解的类才会被扫到和生成实现 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.sishuok" />
		<property name="annotationClass" value="org.springframework.stereotype.Repository"></property>
	</bean>

</beans>
