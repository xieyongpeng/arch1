<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:mongo="http://www.springframework.org/schema/data/mongo"
		xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
		"
		>
		
	<!-- properties config -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="order" value="1" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<list>
				<value>classpath:properties/mysql.properties</value>
				<value>classpath:properties/mongoDB.properties</value>
			</list>
		</property>
	</bean>
		
	<!--自动扫描 com.sishuok包下除了有Controller注解的注解的类-->
	<context:component-scan base-package="com.sishuok">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>	

	<!-- 开启自动代理 -->
	<aop:aspectj-autoproxy/> 
	
	<!-- 配置 Annotation 驱动，扫描@Transactional注解的类定义事务  支持事务注解-->
	<tx:annotation-driven transaction-manager="transactionManager"	proxy-target-class="true" />
	
	<!-- 配置Mysql数据源 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>	 
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName">
			<value>${mysql.driver}</value>
		</property>
		<property name="url">
			<value>${mysql.url}
			</value>
		</property>
		<property name="username">
			<value>${mysql.userName}</value>
		</property>
		<property name="password">
			<value>${mysql.password}</value>
		</property>
	</bean>
	
	
	
	<!-- 加载数据源和MybatisConf.xml以及扫描*Mapper.xml文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:CustomerMybatisConf.xml"/>
		<property name="mapperLocations" value="classpath:mapper/**/*Mapper.xml" />
	</bean>
	
	<!-- 上面扫到了的用以下配置生成实现，同时指定之后加了Repository注解的类才会被扫到和生成实现 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.sishuok" />
		<property name="annotationClass" value="org.springframework.stereotype.Repository"></property>
	</bean>
	
	
	<import resource="classpath:applicationContext_mongodb.xml"/>
	 
 </beans>
